COMMENT = _{ "#" ~ (!NEWLINE ~ ANY)* }
WHITESPACE = _{ " " }

/* Numbers: integers with possible decimals and exponents */
int = { ("+" | "-")? ~ ASCII_DIGIT+ }
int_part = _{ int }
dec_part = _{ int }
exp_part = _{ int }
num = @{ int_part ~ ("." ~ dec_part)? ~ ((^"e" | ^"E") ~ exp_part)? }

/* A token */
token = @{ ASCII_ALPHANUMERIC+ }

/* Registers: a memory register, a device register, or an alias */
reg_mem_base = @{ "r" ~ int }
reg_dev_base = @{ "d" ~ int }
reg_mem = { reg_mem_base | ("r" ~ reg_mem) }
reg_dev = { reg_dev_base | ("d" ~ reg_mem) }
reg_alias = { token }
reg = { reg_mem | reg_dev | reg_alias }

/* Values: literal or from a register */
value = { num | reg }

/* Functions: binary or trinary */
fun_tri = _{ token ~ reg ~ value ~ value }
fun_bi = _{ token ~ reg ~ value }
fun = { fun_tri | fun_bi }

/* Labels */
label = ${ ":" ~ token }

/* Expressions: function calls */
expr = _{ (fun | label) ~ NEWLINE }

program = { (expr | NEWLINE)* }
/* eoi = _{ EOI } */
/* file = _{ SOI ~ program ~ eoi } */
file = _{ SOI ~ program }

